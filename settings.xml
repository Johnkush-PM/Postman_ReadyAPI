<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="b8d42d62-a554-4ed1-bdfe-8df3b11dcfff" created="3.20.0" activeEnvironment="Default environment" name="Postman ready" compositeProjectFormat="1.3" updated="3.20.0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer>
    <con:oAuth2Profile>
      <con:name>jj</con:name>
      <con:type>OAuth 2.0</con:type>
      <con:accessToken>0d1441e87bc4cd9b9bb3f062336cc866c639d9e67ba83918ecf54c0ddba5a7d0</con:accessToken>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus>
      <con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus>
      <con:manualAccessTokenExpirationTimeUnit>SECONDS</con:manualAccessTokenExpirationTimeUnit>
      <con:oAuth2Flow>JWT_GRANT</con:oAuth2Flow>
      <con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod>
      <con:jwtConfiguration/>
      <con:responseType>id_token</con:responseType>
    </con:oAuth2Profile>
  </con:oAuth2ProfileContainer>
  <con:oAuth1ProfileContainer>
    <con:oAuth1Profile>
      <con:name>dfvd</con:name>
      <con:type>OAuth 1.0</con:type>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
    </con:oAuth1Profile>
  </con:oAuth1ProfileContainer>
  <con:reporting/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository>
    <con:oAuth20AuthEntry>
      <con:name>jj</con:name>
      <con:type>OAuth 2.0</con:type>
      <con:accessToken>0d1441e87bc4cd9b9bb3f062336cc866c639d9e67ba83918ecf54c0ddba5a7d0</con:accessToken>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus>
      <con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus>
      <con:manualAccessTokenExpirationTimeUnit>SECONDS</con:manualAccessTokenExpirationTimeUnit>
      <con:oAuth2Flow>JWT_GRANT</con:oAuth2Flow>
      <con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod>
      <con:jwtConfiguration/>
      <con:responseType>id_token</con:responseType>
    </con:oAuth20AuthEntry>
    <con:oAuth20AzureAuthEntry>
      <con:name>bdg</con:name>
      <con:type>OAuth 2.0 (Azure)</con:type>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:manualAccessTokenExpirationTime/>
      <con:manualAccessTokenExpirationTimeUnit>SECONDS</con:manualAccessTokenExpirationTimeUnit>
      <con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow>
      <con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod>
      <con:jwtConfiguration/>
      <con:responseType>id_token</con:responseType>
    </con:oAuth20AzureAuthEntry>
    <con:oAuth10AuthEntry>
      <con:name>dfvd</con:name>
      <con:type>OAuth 1.0</con:type>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
    </con:oAuth10AuthEntry>
  </con:authRepository>
  <con:tags/>
</con:soapui-project>
